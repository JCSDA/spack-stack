config:
  build_jobs: 20

compilers::

  - compiler:
      spec: intel@19.1.2
      paths:
        cc: /apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/bin/intel64/icc
        cxx: /apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/bin/intel64/icpc
        f77: /apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/bin/intel64/ifort
        fc: /apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/bin/intel64/ifort
      flags: {}
      operating_system: centos7
      target: x86_64
      modules:
      - intel/2020.2
      environment:
        prepend_path:
          LD_LIBRARY_PATH: '/apps/gcc-10.2.0/gcc-10.2.0/lib64'
        set:
          CXXFLAGS: '-std=c++14 -gxx-name=/apps/gcc-10.2.0/gcc-10.2.0/bin/g++ -Wl,-rpath,/apps/gcc-10.2.0/gcc-10.2.0/lib64'
          LDFLAGS: '-std=c++14 -gxx-name=/apps/gcc-10.2.0/gcc-10.2.0/bin/g++ -Wl,-rpath,/apps/gcc-10.2.0/gcc-10.2.0/lib64'
      extra_rpaths: []

  - compiler:
      spec: gcc@4.8
      paths:
        cc: /usr/bin/gcc
        cxx: /usr/bin/g++
        f77: /usr/bin/gfortran
        fc: /usr/bin/gfortran
      flags: {}
      operating_system: centos7
      target: x86_64
      modules: []
      environment: {}
      extra_rpaths: []

modules:
  default:
    lmod:
      core_compilers::
      - gcc@4.8.5

      # DH* I don't think this is necessary, since we are loading the default modules provided by the sysadmins ... try without next time
      intel-mpi@2019.8.254:
        environment:
          set:
            'I_MPI_PMI_LIBRARY': '/opt/slurm/lib/libpmi.so'
            'FI_PROVIDER': 'mlx'
            'FI_PROVIDER_PATH': '/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mpi/intel64/libfabric/lib/prov'
            #prepend_path("PATH","/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mpi/intel64/bin")
            #prepend_path("PATH","/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mpi/intel64/libfabric/bin")
            #prepend_path("LD_LIBRARY_PATH","/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mpi/intel64/lib")
            #prepend_path("LD_LIBRARY_PATH","/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mpi/intel64/lib/release")
            #prepend_path("LD_LIBRARY_PATH","/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mpi/intel64/libfabric/lib")
            #prepend_path("LIBRARY_PATH","/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mpi/intel64/libfabric/lib")
            #prepend_path("CLASSPATH","/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mpi/intel64/lib/mpi.jar")
      # *DH

packages:
  mpi:
    buildable: False

  intel-mpi:
    buildable: False
    externals:
    - spec: intel-mpi@2019.8.254
      modules:
      - impi/2020.2

  python:
    buildable: False
    externals:
    - spec: python@3.9.2
      modules:
      - python/3.9.2

  openssl:
    externals:
    - spec: openssl@1.0.2k-fips
      prefix: /usr

  perl:
    externals:
    - spec: perl@5.16.3+cpanm+shared+threads
      prefix: /usr

  m4:
    externals:
    - spec: m4@1.4.16
      prefix: /usr

  cmake:
    buildable: False
    externals:
    - spec: cmake@3.22.1
      modules:
      - cmake/3.22.1
    - spec: cmake@3.18.1
      modules:
      - cmake/3.18.1

  bison:
    externals:
    - spec: bison@3.0.4
      prefix: /usr

  git:
    externals:
    - spec: git@2.28.0
      modules:
      - git/2.28.0

  git-lfs:
    externals:
    - spec: git-lfs@2.12.0
      modules:
      - git/2.28.0

  all:
    compiler:: [intel@19.1.2]
    providers:
      mpi:: [intel-mpi@2019.8.254]
