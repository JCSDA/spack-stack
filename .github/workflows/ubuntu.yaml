name: ubuntu-setup

on:
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '**.md'
      - '.github/ISSUE_TEMPLATE/*'
      - '.gitignore'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# Use custom shell with -l so .bash_profile is sourced
defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:

  # For simplicity, we create this mirror for a standard ubuntu-20.04 setup,
  # ignoring potential differences in the concretized environments between
  # compilers, MPI libraries, templates, ... most of the packages will be
  # the same, the few missing ones will be fetched from source instead of
  # the mirror when the spack builds are run.
  cache-spack-mirror:
    runs-on: ubuntu-20.04

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: cache-spack-mirror
        id: cache-spack-mirror
        uses: actions/cache@v2
        with:
          path: $HOME/spack-mirror
          key: spack-mirror.${{ runner.os }}3

      - name: create-spack-mirror
        shell: bash
        if: steps.cache-spack-mirror.outputs.cache-hit != 'true'
        run: |
          source ./setup.sh
          # DH* TODO - REPLACE jedi-ufs-all with a better environment
          spack stack create env --template 'jedi-ufs-all' --name mirror
          spack env activate -d envs/mirror
          spack compiler find
          spack add re2c
          spack add clingo
          spack concretize
          # But "spack mirror" doesn't like environment variables:
          # ==> Error: Invalid url format from url: ${SPACK_STACK_DIR}/cache/source_cache
          sed -i "s#\${SPACK_STACK_DIR}#$SPACK_STACK_DIR#g" envs/mirror/common/config.yaml
          spack mirror create -a -d $HOME/spack-mirror

  # Cache externals such as Intel compiler/mpi packages and other mpi builds.
  cache-externals:
    strategy:
      matrix:
        compiler-mpi: [ {compiler: intel, mpi: intel-oneapi-mpi}, {compiler: gcc@9, mpi: mpich@4} ]
    runs-on: ubuntu-20.04
    steps:

      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: setup-externals
        uses: ./.github/actions/setup-externals
        with:
          compiler: ${{ matrix.compiler-mpi.compiler }}
          mpi: ${{ matrix.compiler-mpi.mpi }}

  build-spack-stack:
    needs: [cache-externals, cache-spack-mirror]
    strategy:
      matrix:
        compiler-mpi: [ {compiler: intel, mpi: intel-oneapi-mpi}, {compiler: gcc@9, mpi: mpich@4} ]
        template: [skylab-dev, ufs-weather-model, ufs-srw-dev]
        spec: ['']
    runs-on: ubuntu-20.04
    steps:

      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: install-env
        uses: ./.github/actions/setup-spack-stack
        with:
          templates: ${{ matrix.template }}
          specs: ${{ matrix.spec }}
          compiler: ${{ matrix.compiler-mpi.compiler }}
          mpi: ${{ matrix.compiler-mpi.mpi }}
          path: ${{ github.workspace }}
          site: linux.default
