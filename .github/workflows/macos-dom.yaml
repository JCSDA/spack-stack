name: macos-dom-build
on:
  # uncomment if we decide to run tests when merging to develop branch
  #push:
  #  # merges to develop branch
  #  branches: [develop]
  pull_request:
    # pull request to develop with a label
    types: [labeled]
    branches: [develop]
  workflow_dispatch:
    inputs:
      template:
        description: 'Base spack.yaml template. Default is a complete JEDI-UFS environment.'
        required: true
        default: 'unified-dev'
      specs:
        description: 'Which specs to add to the template. Default is none (empty string).'
        required: false
        default: ''

# Use custom shell with -l so .bash_profile is sourced
defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:
  macos-dom-build:
    if: ${{ github.event.label.name == 'run-macos-dom' }} || ${{ inputs.template }}
    runs-on: [macos-dom]

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: create-env
        run: |
          source ./setup.sh
          spack stack create env --site macos.default --template ${{ inputs.template || 'unified-dev' }} --name ${{ inputs.template || 'unified-dev' }}.macos-dom
          spack env activate -d envs/${{ inputs.template || 'unified-dev' }}.macos-dom
          spack add ${{ inputs.specs || '' }}

          spack external find
          spack external find perl
          spack external find wget
          PATH="/usr/local/opt/qt@5/bin:${PATH}" spack external find qt
          PATH="/usr/local/opt/curl/bin:${PATH}" spack external find curl
          spack compiler find

          sed -i '' "s/\['\%apple-clang', '\%gcc', '\%intel'\]/\['\%apple-clang'\]/g" envs/${{ inputs.template || 'unified-dev' }}.macos-dom/spack.yaml

          spack concretize
          spack install --fail-fast

      # Skip this - takes forever and isn't necessary
      #- name: upload-mirror
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: spack_mirror
      #    path: cache/source_cache
