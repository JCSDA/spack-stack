# Pin versions and specs when building packages
  packages:
    #
    all:
      providers:
        blas: [openblas]
        fftw-api: [fftw]
        gl: [opengl]
        glu: [openglu]
        jpeg: [libjpeg-turbo]
        lapack: [openblas]
        yacc: [bison]
    #
    # This version of awscli goes with py-pyyaml@5.4.1
    awscli:
      version: ['1.27.84']
    bacio:
      version: ['2.4.1']
    bison:
      version: ['3.8.2']
    boost:
      version: ['1.78.0']
      variants: ~atomic +chrono +date_time +exception +filesystem ~graph ~iostreams ~locale ~log ~math ~mpi ~numpy +pic +program_options +python ~random +regex +serialization ~signals +system +test +thread +timer ~wave cxxstd=17 visibility=hidden
    bufr:
      version: ['12.0.1']
      variants: +python
    cairo:
      variants: +pic
    # Newer versions of CDO require the C++-17 standard, which doesn't
    # work with all compilers that are currently in use in spack-stack
    cdo:
      version: ['2.0.5']
      variants: ~openmp
    cmake:
      version: ['3.23.1']
      variants: +ownlibs
    # Attention - when updating also check the various jcsda-emc-bundles env packages
    crtm:
      version: ['2.4.0']
      variants: +fix
    ecbuild:
      version: ['3.7.2']
    eccodes:
      version: ['2.27.0']
      variants: +png
    ecflow:
      version: ['5.8.4']
      variants: +ui
    eckit:
      version: ['1.24.4']
      variants: linalg=eigen,lapack compression=lz4,bzip2
    ecmwf-atlas:
      version: ['0.35.0']
      variants: +fckit +ectrans +tesselation +fftw
    ectrans:
      version: ['1.2.0']
      variants: ~enable_mkl +fftw
    eigen:
      version: ['3.4.0']
    # Attention - when updating the version also check the common modules.yaml
    # config and update the projections for lmod/tcl.
    # Also, check the acorn and derecho site configs which have esmf modifications.
    esmf:
      version: ['8.4.2']
      variants: ~xerces ~pnetcdf snapshot=none ~shared +external-parallelio
      require:
        - any_of: ['fflags="-fp-model precise" cxxflags="-fp-model precise"']
          when: "%intel"
          message: "Extra ESMF compile options for Intel"
        - any_of: ['']
          when: "%gcc"
          message: "Extra ESMF compile options for GCC"
    fckit:
      version: ['0.11.0']
      variants: +eckit
    fftw:
      version: ['3.3.10']
    fiat:
      version: ['1.2.0']
    fms:
      #version: ['2023.01']
      #variants: precision=32,64 +quad_precision +gfs_phys +openmp +pic constants=GFS build_type=Release
      version: ['2023.02']
      variants: precision=32,64 +quad_precision +gfs_phys +openmp +pic constants=GFS build_type=Release +use_fmsio
    fontconfig:
      variants: +pic
    freetype:
      variants: +pic
    g2:
      version: ['3.4.5']
    g2c:
      version: ['1.6.4']
    g2tmpl:
      version: ['1.10.2']
    gfsio:
      version: ['1.4.1']
    gftl-shared:
      version: ['1.5.0']
    #git-lfs:
      # Assume git-lfs is provided, hard to install
      # because of dependencies on go/go-bootstrap.
      # Note: Uncommenting this entry will break
      # the container builds.
      #version: ['2.11.0']
    grib-util:
      version: ['1.3.0']
    gsibec:
      version: ['1.1.3']
    gsi-ncdiag:
      version: ['1.1.1']
    gsl-lite:
      version: ['0.37.0']
    hdf:
      version: ['4.2.15']
      variants: ~fortran ~netcdf
    hdf5:
      version: ['1.14.0']
      variants: +hl +fortran +mpi ~threadsafe +szip
    ip:
      version: ['4.3.0']
    ip2:
      version: ['1.1.2']
    jasper:
      version: ['2.0.32']
    jedi-cmake:
      version: ['1.4.0']
    jpeg:
      version: ['9.1.0']
    landsfcutil:
      version: ['2.4.1']
    libjpeg-turbo:
      version: ['2.1.0']
    libpng:
      version: ['1.6.37']
      variants: +pic
    libyaml:
      version: ['0.2.5']
    mapl:
      # 2.35.2 goes with esmf@8.4.2, 2.40.3 goes with esmf@8.5.0
      # turn off ~pflogger and extdata2g to avoid compilation
      # errors with intel@2021.7.0+, see
      # https://github.com/JCSDA/spack-stack/issues/769
      # also: ... extdata2g segfault UFS?
      version: ['2.35.2']
      variants: ~shared ~extdata2g ~pflogger
    # If making changes here, also check the Discover site config and the CI workflows
    met:
      version: ['11.1.0']
      variants: +python +grib2
    metplus:
      version: ['5.1.0']
    mpich:
      variants: ~hwloc +two_level_namespace
    nco:
      version: ['5.0.6']
      variants: ~doc
    # ncview - when adding information here, also check Orion
    # and Discover site configs
    nemsio:
      version: ['2.5.4']
    nemsiogfs:
      version: ['2.5.3']
    nccmp:
      version: ['1.9.0.1']
    ncio:
      version: ['1.1.2']
    netcdf-c:
      version: ['4.9.2']
      # If using 4.9.1, turn off byterange variant to fix compile error: ~byterange
      variants: +dap +mpi ~parallel-netcdf
    netcdf-cxx4:
      version: ['4.3.1']
    netcdf-fortran:
      version: ['4.6.0']
    # ninja - when adding information here, also check Cheyenne
    # and Discover site configs
    nlohmann-json:
      version: ['3.10.5']
    nlohmann-json-schema-validator:
      version: ['2.1.0']
    odc:
      version: ['1.4.6']
      variants: ~fortran
    openblas:
      version: ['0.3.24']
      variants: +noavx512
    openmpi:
      variants: +internal-hwloc +two_level_namespace
    # Pin openssl to avoid duplicate packages being built
    openssl:
      version: ['1.1.1u']
      variants: +shared
    p4est:
      version: ['2.8']
    parallelio:
      version: ['2.5.10']
      variants: +pnetcdf
    parallel-netcdf:
      version: ['1.12.2']
    pixman:
      variants: +pic
    # Do not build pkgconf - https://github.com/jcsda/spack-stack/issues/123
    pkgconf:
      buildable: False
    prod-util:
      version: ['1.2.2']
    proj:
      version: ['8.1.0']
      variants: ~tiff
    python:
      version: ['3.10.8']
    py-attrs:
      # https://github.com/JCSDA/spack-stack/issues/740
      version: ['21.4.0']
    py-cartopy:
      variants: +plotting
    py-click:
      version: ['8.0.3']
    # Pin py-cryptography to a version earlier than 3.4 to avoid the rust dependency
    py-cryptography:
      version: ['3.3.2']
    py-eccodes:
      version: ['1.4.2']
    py-h5py:
      version: ['3.7.0']
      variants: ~mpi
    # Comment out for now until build problems are solved
    # https://github.com/jcsda/spack-stack/issues/522
    # see also ewok-env virtual package and container
    # README.md
    #py-mysql-connector-python:
    #  version: ['8.0.32']
    py-netcdf4:
      version: ['1.5.8']
      variants: ~mpi
    py-numpy:
      version: ['1.22.3']
      variants: +blas +lapack
    py-openpyxl:
      version: ['3.0.3']
    # To avoid pip._vendor.pep517.wrappers.BackendInvalid errors with newer
    # versions of py-poetry-core when using external/homebrew Python as
    # we do at the moment in spack-stack.
    py-poetry-core:
      version: ['1.0.8']
    py-pybind11:
      version: ['2.8.1']
    py-pygithub:
      version: ['1.55']
    py-pygrib:
      version: ['2.1.4']
    py-pyhdf:
      version: ['0.10.4']
    py-pyproj:
      version: ['3.1.0']
    py-python-dateutil:
      version: ['2.8.2']
    py-pythran:
      # Versions earlier than 0.11.0 don't compile on macOS with llvm-clang/13.0.0 and Python/3.9,
      # and 0.11.0 leads to downstream errors in py-scipy with the Intel compilers
      version: ['0.12.2']
    py-scipy:
      version: ['1.9.3']
    # Pin the py-setuptools version to avoid duplicate Python packages
    py-setuptools:
      version: ['59.4.0']
    # Pin the py-setuptools-scm version to avoid duplicate Python packages
    py-setuptools-scm:
      version: ['7.0.5']
    py-shapely:
      version: ['1.8.0']
    qt:
      version: ['5.15.3']
    scotch:
      version: ['7.0.4']
      variants: +mpi+metis~shared~threads~mpi_thread+noarch
    sfcio:
      version: ['1.4.1']
    shumlib:
      version: ['macos_clang_linux_intel_port']
    sigio:
      version: ['2.3.2']
    sp:
      version: ['2.3.3']
    udunits:
      version: ['2.2.28']
    upp:
      version: ['10.0.10']
    w3emc:
      version: ['2.10.0']
    w3nco:
      version: ['2.4.1']
    wget:
      version: ['1.21.2']
    # When changing wgrib2, also check Hercules and Nautilus site configs
    wgrib2:
      version: ['2.0.8']
    wrf-io:
      version: ['1.2.0']
    yafyaml:
      version: ['0.5.1']
    zlib:
      version: ['1.2.13']
    zstd:
      version: ['1.5.2']
      variants: +programs
