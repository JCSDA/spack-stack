# NOTE: Module configuration changes should be appropriately reflected
#         in both modules_lmod.yaml and modules_tcl.yaml.
modules:
  default:
    roots:
      tcl: $env/install/modulefiles
    arch_folder: false
    tcl:
      # Core compiler is a dummy that is not used to build the stack, do not change.
      # Hopefully nobody is trying to build software with gcc-4.6 in 2023 ...
      core_compilers::
      - gcc@4.6
      projections:
        all: '{compiler.name}/{compiler.version}/{name}/{version}'
        ^mpi: '{^mpi.name}/{^mpi.version}/{compiler.name}/{compiler.version}/{name}/{version}'
        ecmwf-atlas: '{compiler.name}/{compiler.version}/atlas/{version}'
        nlohmann-json: '{compiler.name}/{compiler.version}/json/{version}'
        nlohmann-json-schema-validator: '{compiler.name}/{compiler.version}/json-schema-validator/{version}'
        libjpeg-turbo: '{compiler.name}/{compiler.version}/libjpeg/{version}'
        prod-util: '{compiler.name}/{compiler.version}/prod_util/{version}'
      exclude:
      # List of packages for which we don't need modules
      - apple-libunwind
      - apple-libuuid
      - autoconf
      - automake
      - berkeley-db
      - bison
      - bzip2
      - diffutils
      - expat
      - findutils
      - fixesproto
      - flex
      - freetype
      - gdbm
      - googletest
      - hwloc
      - inputproto
      - kbproto
      - libaec
      - libedit
      - libevent
      - libfabric
      - libffi
      - libgeotiff
      - libice
      - libiconv
      - libpciaccess
      - libpthread-stubs
      - libsigsegv
      - libsm
      - libtiff
      - libtool
      - libx11
      - libxau
      - libxcb
      - libxdmcp
      - libxext
      - libxfixes
      - libxi
      - libxml
      - libxml2
      - libxrandr
      - libxrender
      - libxxf86vm
      - lz4
      - m4
      - mysql
      - nasm
      - ncurses
      - openssh
      - openssl
      - perl
      - pkgconf
      - qt
      - randrproto
      - readline
      - renderproto
      - xcb-proto
      - xextproto
      - xf86vidmodeproto
      - xproto
      - xrandr
      - xtrans
      - xz
      - yaksa
      # Do not create MPI modules - we create our own meta modules
      - cray-mpich
      - mpich
      - openmpi
      - intel-mpi
      - intel-oneapi-mpi
      # Do not create python modules - we create our own meta modules
      - python
      hash_length: 0
      all:
        autoload: direct
        environment:
          set:
            '{name}_ROOT': '{prefix}'
        suffixes:
          +debug: 'debug'
          build_type=Debug:  'debug'
      ecmwf-atlas:
        environment:
          set:
            'atlas_ROOT': '{prefix}'
      esmf:
        environment:
          set:
            'ESMFMKFILE': '{prefix}/lib/esmf.mk'
      hdf5:
        environment:
          set:
            'HDF5_DIR': '{prefix}'
      libpng:
        environment:
          set:
            'PNG_ROOT': '{prefix}'
      libyaml:
        environment:
          set:
            'YAML_DIR': '{prefix}'
            'YAML_LIB': '{prefix}/lib'
            'YAML_INC': '{prefix}/include'
      madis:
        environment:
          set:
            'MADIS_ROOT': '{prefix}'
      mapl:
        suffixes:
          # Keeping this as a reminder how to do snapshots
          #^esmf@8.3.0b09~debug snapshot=b09: 'esmf-8.3.0b09'
          #^esmf@8.3.0b09+debug snapshot=b09: 'esmf-8.3.0b09-debug'
          ^esmf@8.4.2~debug snapshot=none: 'esmf-8.4.2'
          ^esmf@8.4.2+debug snapshot=none: 'esmf-8.4.2-debug'
          ^esmf@8.5.0~debug snapshot=none: 'esmf-8.5.0'
          ^esmf@8.5.0+debug snapshot=none: 'esmf-8.5.0-debug'
          ^esmf@8.6.0~debug snapshot=none: 'esmf-8.6.0'
          ^esmf@8.6.0+debug snapshot=none: 'esmf-8.6.0-debug'
          ^esmf@8.6.1~debug snapshot=none: 'esmf-8.6.1'
          ^esmf@8.6.1+debug snapshot=none: 'esmf-8.6.1-debug'
      openmpi:
        environment:
          set:
            'OMPI_MCA_rmaps_base_oversubscribe': '1'
      p4est:
        environment:
          set:
            'P4EST_API_DIR': '{prefix}'
            'P4EST_API_LIB': '{prefix}/lib'
            'P4EST_API_INC': '{prefix}/include'
      bacio:
        environment:
          set:
            'BACIO_INC4': '{prefix}/include_4'
            'BACIO_INC8': '{prefix}/include_8'
            'BACIO_LIB4': '{prefix}/lib/libbacio_4.a'
            'BACIO_LIB8': '{prefix}/lib/libbacio_8.a'
      bufr:
        environment:
          set:
            'BUFR_ROOT': '{prefix}'
      crtm:
        environment:
          set:
            'CRTM_INC': '{prefix}/include'
            'CRTM_LIB': '{prefix}/lib/libcrtm.a'
      g2tmpl:
        environment:
          set:
            'G2TMPL_INC': '{prefix}/include'
            'G2TMPL_LIB': '{prefix}/lib/libg2tmpl.a'
      gfsio:
        environment:
          set:
            'GFSIO_INC': '{prefix}/include'
            'GFSIO_LIB': '{prefix}/lib/libgfsio.a'
            'GFSIO_INC4': '{prefix}/include'
            'GFSIO_LIB4': '{prefix}/lib/libgfsio.a'
      grib-util:
        environment:
          set:
            'CNVGRIB': '{prefix}/bin/cnvgrib'
            'COPYGB': '{prefix}/bin/copygb'
            'COPYGB2': '{prefix}/bin/copygb2'
            'DEGRIB2': '{prefix}/bin/degrib2'
            'GRB2INDEX': '{prefix}/bin/grb2index'
            'GRBINDEX': '{prefix}/bin/grbindex'
            'GRIB2GRIB': '{prefix}/bin/grib2grib2'
            'TOCGRIB': '{prefix}/bin/tocgrib'
            'TOCGRIB2': '{prefix}/bin/tocgrib2'
            'TOCGRIB2SUPER': '{prefix}/bin/tocgrib2super'
            'WGRIB': '{prefix}/bin/wgrib2'
      landsfcutil:
        environment:
          set:
            'LANDSFCUTIL_INC4': '{prefix}/include_4'
            'LANDSFCUTIL_INCd': '{prefix}/include_d'
            'LANDSFCUTIL_LIB4': '{prefix}/lib/liblandsfcutil_4.a'
            'LANDSFCUTIL_LIBd': '{prefix}/lib/liblandsfcutil_d.a'
      nemsio:
        environment:
          set:
            'NEMSIO_INC': '{prefix}/include'
            'NEMSIO_LIB': '{prefix}/lib64/libnemsio.a'
            'MKGFSNEMSIOCTL': '{prefix}/mkgfsnemsioctl'
            'NEMSIO_CHGDATE': '{prefix}/bin/nemsio_chgdate'
            'NEMSIO_GET': '{prefix}/bin/nemsio_get'
            'NEMSIO_READ': '{prefix}/bin/nemsio_read'
      nemsiogfs:
        environment:
          set:
            'NEMSIOGFS_INC': '{prefix}/include'
            'NEMSIOGFS_LIB': '{prefix}/lib'
      prod-util:
        environment:
          set:
            'MDATE': '{prefix}/bin/mdate'
            'NDATE': '{prefix}/bin/ndate'
            'NHOUR': '{prefix}/bin/nhour'
            'FSYNC': '{prefix}/bin/fsync_file'
      sigio:
        environment:
          set:
            'SIGIO_INC': '{prefix}/include'
            'SIGIO_LIB': '{prefix}/lib/libsigio.a'
            'SIGIO_INC4': '{prefix}/include'
            'SIGIO_LIB4': '{prefix}/lib/libsigio.a'
      sfcio:
        environment:
          set:
            'SFCIO_INC': '{prefix}/include'
            'SFCIO_LIB': '{prefix}/lib/libsfcio.a'
      w3nco:
        environment:
          set:
            'W3NCO_INC4': '{prefix}/include_4'
            'W3NCO_INC8': '{prefix}/include_8'
            'W3NCO_INCd': '{prefix}/include_d'
            'W3NCO_LIB4': '{prefix}/lib/libw3nco_4.a'
            'W3NCO_LIB8': '{prefix}/lib/libw3nco_8.a'
            'W3NCO_LIBd': '{prefix}/lib/libw3nco_d.a'
      wgrib2:
        environment:
          set:
            'WGRIB2_INC': '{prefix}/include'
            'WGRIB2_LIB': '{prefix}/lib/libwgrib2.a'
            'WGRIB2': '{prefix}/bin/wgrib2'
      wrf-io:
        environment:
          set:
            'WRF_IO_INC': '{prefix}/include'
            'WRF_IO_LIB': '{prefix}/lib/libwrf_io.a'
      upp:
        environment:
          set:
            'UPP_INC': '{prefix}/include'
            'UPP_LIB': '{prefix}/lib/libupp.a'

    prefix_inspections:
      bin:
      - PATH
      man:
      - MANPATH
      share/man:
      - MANPATH
      share/aclocal:
      - ACLOCAL_PATH
      lib:
      # Do not set LIBRARY_PATH, this messes up the
      # rpath handling on macOS (in cmake builds)
      #- LIBRARY_PATH
      - LD_LIBRARY_PATH
      - DYLD_LIBRARY_PATH
      lib64:
      # Do not set LIBRARY_PATH, this messes up the
      # rpath handling on macOS (in cmake builds)
      #- LIBRARY_PATH
      - LD_LIBRARY_PATH
      - DYLD_LIBRARY_PATH
      include:
      - CPATH
      lib/pkgconfig:
      - PKG_CONFIG_PATH
      lib64/pkgconfig:
      - PKG_CONFIG_PATH
      '':
      - CMAKE_PREFIX_PATH
