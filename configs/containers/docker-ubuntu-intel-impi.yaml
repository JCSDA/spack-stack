spack:
  concretizer:
    unify: true
  view: false

  config:
    build_jobs: 8
    connect_timeout: 60

    install_tree:
      root: $env/install
  compilers:
  - compiler:
      spec: intel@2022.1.0
      paths:
        cc: /opt/intel/oneapi/compiler/2022.1.0/linux/bin/intel64/icc
        cxx: /opt/intel/oneapi/compiler/2022.1.0/linux/bin/intel64/icpc
        f77: /opt/intel/oneapi/compiler/2022.1.0/linux/bin/intel64/ifort
        fc: /opt/intel/oneapi/compiler/2022.1.0/linux/bin/intel64/ifort
      flags: {}
      operating_system: ubuntu20.04
      target: any
      modules: []
      environment:
        prepend_path:
          PATH: /usr/bin
          LD_LIBRARY_PATH: /usr/lib64:/opt/intel/oneapi/compiler/2022.1.0/linux/compiler/lib/intel64_lin
          CPATH: /usr/include
      extra_rpaths: []
  # Basic package config from configs/common/packages.yaml
  # Additional package config for container
  packages:
    all:
      compiler: [intel@2022.1.0]
      providers:
        mpi: [intel-oneapi-mpi@2021.6.0]
        blas: [openblas]
        fftw-api: [fftw]
        gl: [opengl]
        glu: [openglu]
        jpeg: [libjpeg-turbo]
        lapack: [openblas]
        yacc: [bison]
    mpi:
      buildable: false
    intel:
      buildable: false
      externals:
      - spec: intel@2022.1.0
        prefix: /opt/intel/oneapi/compiler/2022.1.0/linux/bin/intel64
    intel-oneapi-mpi:
      buildable: false
      externals:
      - spec: intel-oneapi-mpi@2021.6.0
        prefix: /opt/intel/oneapi
    intel-oneapi-mkl:
      buildable: false
      externals:
      - spec: intel-oneapi-mkl@2022.1.0
        prefix: /opt/intel/oneapi
    git:
      buildable: false
      externals:
      - spec: git@2
        prefix: /usr
    git-lfs:
      buildable: false
      externals:
      - spec: git-lfs@2
        prefix: /usr
    bacio:
      version: [2.4.1]
    bison:
      version: [3.8.2]
    boost:
      version: [1.78.0]
      variants: ~atomic +chrono +date_time +exception +filesystem ~graph ~iostreams
        ~locale ~log ~math ~mpi ~numpy +pic +program_options +python ~random +regex
        +serialization ~signals +system +test +thread +timer ~wave cxxstd=14 visibility=hidden
    bufr:
      version: [11.7.0]
      variants: +python
    cmake:
      version: [3.22.1]
    crtm:
      version: [2.3.0]
    diffutils:
      version: [3.7]
    ecbuild:
      version: [3.6.5]
    eccodes:
      version: [2.21.0]
    ecflow:
      version: [5.8.3]
      variants: +ui
    eckit:
      version: [1.19.0]
      variants: linalg=eigen,lapack compression=lz4,bzip2
    ecmwf-atlas:
      version: [0.29.0]
      variants: +fckit +trans
    ectrans:
      version: [develop]
      variants: ~enable_mkl
    eigen:
      version: [3.4.0]
    esmf:
      version: [8.3.0b09]
      variants: ~xerces ~pnetcdf
    fckit:
      version: [0.9.5]
      variants: +eckit
    fftw:
      version: [3.3.10]
    fiat:
      version: [main]
    findutils:
      version: [4.8.0]
    flex:
      version: [2.6.3]
    fms:
      version: [2022.01]
      variants: +64bit +quad_precision +gfs_phys +openmp +pic
    g2:
      version: [3.4.5]
    g2c:
      version: [1.6.4]
    g2tmpl:
      version: [1.10.0]
    gfsio:
      version: [1.4.1]
    gftl-shared:
      version: [1.5.0]
    grib-util:
      version: [1.2.3]
    gsl-lite:
      version: [0.37.0]
    hdf:
      version: [4.2.15]
      variants: ~fortran ~netcdf
    hdf5:
      version: [1.12.1]
      variants: +hl +fortran +mpi +threadsafe
    ip:
      version: [3.3.3]
    ip2:
      version: [1.1.2]
    jasper:
      version: [2.0.32]
    jedi-cmake:
      version: [1.3.0]
    jpeg:
      version: [9.1.0]
    landsfcutil:
      version: [2.4.1]
    libjpeg-turbo:
      version: [2.1.0]
    libpng:
      version: [1.6.37]
    mapl:
      version: [2.22.0]
    met:
      version: [10.1.1]
      variants: +python +grib2
    metplus:
      version: [4.1.1]
    mpich:
      variants: ~hwloc +two_level_namespace
    nco:
      version: [5.0.6]
      variants: ~doc
    nemsio:
      version: [2.5.2]
    nemsiogfs:
      version: [2.5.3]
    nccmp:
      version: [1.9.0.1]
    ncio:
      version: [1.1.2]
    netcdf-c:
      version: [4.8.1]
      variants: +dap +mpi +parallel-netcdf
    netcdf-cxx4:
      version: [4.3.1]
    netcdf-fortran:
      version: [4.5.4]
    nlohmann-json:
      version: [3.10.5]
    nlohmann-json-schema-validator:
      version: [2.1.0]
    openblas:
      version: [0.3.19]
      variants: +noavx512
    parallelio:
      version: [2.5.4]
      variants: +pnetcdf
    parallel-netcdf:
      version: [1.12.2]
    pkgconf:
      buildable: false
    prod-util:
      version: [1.2.2]
    proj:
      version: [8.1.0]
      variants: ~tiff
    python:
      version: [3.9.12]
    py-cartopy:
      variants: +plotting
    py-click:
      version: [8.0.3]
    py-eccodes:
      version: [1.3.2]
    py-h5py:
      version: [3.6.0]
    py-netcdf4:
      version: [1.5.3]
      variants: +mpi
    py-numpy:
      version: [1.22.3]
      variants: +blas +lapack
    py-openpyxl:
      version: [3.0.3]
    py-pandas:
      version: [1.4.0]
    py-pybind11:
      version: [2.8.1]
    py-pycodestyle:
      version: [2.8.0]
    py-pygithub:
      version: [1.55]
    py-pygrib:
      version: [2.1.4]
    py-pyhdf:
      version: [0.10.4]
    py-pyproj:
      version: [3.1.0]
    py-python-dateutil:
      version: [2.8.2]
    py-pythran:
      version: [0.11.0]
    py-pyyaml:
      version: [6.0]
    py-scipy:
      version: [1.8.0]
    py-shapely:
      version: [1.8.0]
    qt:
      version: [5.15.3]
    sfcio:
      version: [1.4.1]
    shumlib:
      version: [macos_clang_linux_intel_port]
    sigio:
      version: [2.3.2]
    sp:
      version: [2.3.3]
    udunits:
      version: [2.2.28]
    upp:
      version: [10.0.10]
    w3emc:
      version: [2.9.1]
    w3nco:
      version: [2.4.1]
    wget:
      version: [1.21.2]
    wgrib2:
      version: [2.0.8]
    wrf-io:
      version: [1.2.0]
    yafyaml:
      version: [0.5.1]
    zlib:
      version: [1.2.12]
  specs:
  - jasper@2.0.25
  - zlib@1.2.12
  - libpng@1.6.37
  - hdf5@1.10.6
  - netcdf-c@4.7.4
  - netcdf-fortran@4.5.4
  - parallelio@2.5.2
  - esmf@8.3.0b09
  - fms@2021.03
  - bacio@2.4.1
  - crtm@2.3.0
  - g2@3.4.3
  - g2tmpl@1.10.0
  - ip@3.3.3
  - sp@2.3.3
  - w3nco@2.4.1
  - upp@10.0.10
  - gftl-shared@1.3.3
  - yafyaml@0.5.1
  - mapl@2.22.0
  - gfsio@1.4.1
  - landsfcutil@2.4.1
  - nemsio@2.5.2
  - nemsiogfs@2.5.3
  - sfcio@1.4.1
  - sigio@2.3.2
  - w3emc@2.7.3
  - wgrib2@2.0.8


  container:
    # Select the format of the recipe e.g. docker,
    # singularity or anything else that is currently supported
    format: docker
    # How to use:
    #$ spack containerize > Dockerfile
    #$ docker build -t myimage .
    #$ docker run -it myimage

    #format: singularity
    # How to use:
    #$ spack containerize > hdf5.def
    #$ sudo singularity build hdf5.sif hdf5.def

    # Sets the base images for the stages where Spack builds the
    # software or where the software gets installed after being built..
    images:
      os: ubuntu:20.04
      spack:
        url: https://github.com/noaa-emc/spack
        ref: jcsda_emc_spack_stack
        resolve_sha: false

    # Whether or not to strip binaries
    strip: true

    ## Additional system packages that are needed at runtime
    os_packages:
      build:
      - git
      - git-lfs
      final:
      - wget
      - gpg
      - curl
      - git
      - git-lfs

    ## Extra instructions
    extra_instructions:
      build: RUN apt update && apt install wget && apt install apt-utils && wget -O-
        https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        | gpg --dearmor | tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
        && echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi
        all main" | tee /etc/apt/sources.list.d/oneAPI.list && apt update && apt install
        intel-hpckit -y
      final: RUN export TZ=America/New_York && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime
        && echo $TZ > /etc/timezone && apt update && apt install -y tzdata && apt
        update  && apt install apt-utils && wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        | gpg --dearmor | tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
        && echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi
        all main" | tee /etc/apt/sources.list.d/oneAPI.list && apt update && apt install
        intel-hpckit -y

    # Labels for the image
    labels:
      app: empty
      mpi: intel-oneapi-mpi
  modules:
    default:
      roots:
        lmod: $env/install/modulefiles
        tcl: $env/install/modulefiles
  include: []
